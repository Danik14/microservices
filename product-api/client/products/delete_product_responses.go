// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteProductReader is a Reader for the DeleteProduct structure.
type DeleteProductReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProductReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewDeleteProductCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteProductBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteProductNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteProductInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteProductCreated creates a DeleteProductCreated with default headers values
func NewDeleteProductCreated() *DeleteProductCreated {
	return &DeleteProductCreated{}
}

/*
DeleteProductCreated describes a response with status code 201, with default header values.

No content is returned by this API endpoint
*/
type DeleteProductCreated struct {
}

// IsSuccess returns true when this delete product created response has a 2xx status code
func (o *DeleteProductCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete product created response has a 3xx status code
func (o *DeleteProductCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete product created response has a 4xx status code
func (o *DeleteProductCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete product created response has a 5xx status code
func (o *DeleteProductCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this delete product created response a status code equal to that given
func (o *DeleteProductCreated) IsCode(code int) bool {
	return code == 201
}

func (o *DeleteProductCreated) Error() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductCreated ", 201)
}

func (o *DeleteProductCreated) String() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductCreated ", 201)
}

func (o *DeleteProductCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProductBadRequest creates a DeleteProductBadRequest with default headers values
func NewDeleteProductBadRequest() *DeleteProductBadRequest {
	return &DeleteProductBadRequest{}
}

/*
DeleteProductBadRequest describes a response with status code 400, with default header values.

Generic error message returned as a string
*/
type DeleteProductBadRequest struct {
}

// IsSuccess returns true when this delete product bad request response has a 2xx status code
func (o *DeleteProductBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete product bad request response has a 3xx status code
func (o *DeleteProductBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete product bad request response has a 4xx status code
func (o *DeleteProductBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete product bad request response has a 5xx status code
func (o *DeleteProductBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete product bad request response a status code equal to that given
func (o *DeleteProductBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteProductBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductBadRequest ", 400)
}

func (o *DeleteProductBadRequest) String() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductBadRequest ", 400)
}

func (o *DeleteProductBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProductNotFound creates a DeleteProductNotFound with default headers values
func NewDeleteProductNotFound() *DeleteProductNotFound {
	return &DeleteProductNotFound{}
}

/*
DeleteProductNotFound describes a response with status code 404, with default header values.

Generic error message returned as a string
*/
type DeleteProductNotFound struct {
}

// IsSuccess returns true when this delete product not found response has a 2xx status code
func (o *DeleteProductNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete product not found response has a 3xx status code
func (o *DeleteProductNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete product not found response has a 4xx status code
func (o *DeleteProductNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete product not found response has a 5xx status code
func (o *DeleteProductNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete product not found response a status code equal to that given
func (o *DeleteProductNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteProductNotFound) Error() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductNotFound ", 404)
}

func (o *DeleteProductNotFound) String() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductNotFound ", 404)
}

func (o *DeleteProductNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProductInternalServerError creates a DeleteProductInternalServerError with default headers values
func NewDeleteProductInternalServerError() *DeleteProductInternalServerError {
	return &DeleteProductInternalServerError{}
}

/*
DeleteProductInternalServerError describes a response with status code 500, with default header values.

Generic error message returned as a string
*/
type DeleteProductInternalServerError struct {
}

// IsSuccess returns true when this delete product internal server error response has a 2xx status code
func (o *DeleteProductInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete product internal server error response has a 3xx status code
func (o *DeleteProductInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete product internal server error response has a 4xx status code
func (o *DeleteProductInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete product internal server error response has a 5xx status code
func (o *DeleteProductInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete product internal server error response a status code equal to that given
func (o *DeleteProductInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteProductInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductInternalServerError ", 500)
}

func (o *DeleteProductInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductInternalServerError ", 500)
}

func (o *DeleteProductInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
